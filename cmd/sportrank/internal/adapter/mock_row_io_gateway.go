// Code generated by mockery v2.13.1. DO NOT EDIT.

package adapter

import mock "github.com/stretchr/testify/mock"

// MockRowIOGateway is an autogenerated mock type for the RowIOGateway type
type MockRowIOGateway struct {
	mock.Mock
}

// CalculateRankings provides a mock function with given fields: rows
func (_m *MockRowIOGateway) CalculateRankings(rows []string) ([]string, error) {
	ret := _m.Called(rows)

	var r0 []string
	if rf, ok := ret.Get(0).(func([]string) []string); ok {
		r0 = rf(rows)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(rows)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockRowIOGateway interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRowIOGateway creates a new instance of MockRowIOGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRowIOGateway(t mockConstructorTestingTNewMockRowIOGateway) *MockRowIOGateway {
	mock := &MockRowIOGateway{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
